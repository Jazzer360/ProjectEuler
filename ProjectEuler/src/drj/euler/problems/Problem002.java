package drj.euler.problems;

import drj.euler.Problem;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:
 * 
 * 		1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not
 * exceed four million, find the sum of the even-valued terms.
 */
public class Problem002 extends Problem {

	public static void main(String[] args) {
		Problem p = new Problem002();
		System.out.println(p.toString());
	}

	@Override
	protected String onSolve() {
		int prev = 1;
		int curr = 2;
		int sumOfEven = 0;

		while (curr < 4000000) {
			if (curr % 2 == 0) sumOfEven += curr;
			int next = prev + curr;
			prev = curr;
			curr = next;
		}

		return String.valueOf(sumOfEven);
	}
}
